2024-04-26 01:32:29,064:[P:11913]:Rank[0/2] => collecting env info (might take some time)
2024-04-26 01:32:30,246:[P:11913]:Rank[0/2] 
PyTorch version: 2.3.0+cu121
Is debug build: False
CUDA used to build PyTorch: 12.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 22.04.3 LTS (x86_64)
GCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
Clang version: 14.0.0-1ubuntu1.1
CMake version: version 3.27.9
Libc version: glibc-2.35

Python version: 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] (64-bit runtime)
Python platform: Linux-6.1.58+-x86_64-with-glibc2.35
Is CUDA available: True
CUDA runtime version: 12.2.140
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: GPU 0: NVIDIA L4
Nvidia driver version: 535.104.05
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.9.6
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.9.6
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.9.6
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.9.6
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.9.6
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.9.6
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.9.6
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
Architecture:                       x86_64
CPU op-mode(s):                     32-bit, 64-bit
Address sizes:                      46 bits physical, 48 bits virtual
Byte Order:                         Little Endian
CPU(s):                             16
On-line CPU(s) list:                0-15
Vendor ID:                          GenuineIntel
Model name:                         Intel(R) Xeon(R) CPU @ 2.20GHz
CPU family:                         6
Model:                              85
Thread(s) per core:                 2
Core(s) per socket:                 8
Socket(s):                          1
Stepping:                           7
BogoMIPS:                           4400.46
Flags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512_vnni md_clear arch_capabilities
Hypervisor vendor:                  KVM
Virtualization type:                full
L1d cache:                          256 KiB (8 instances)
L1i cache:                          256 KiB (8 instances)
L2 cache:                           8 MiB (8 instances)
L3 cache:                           38.5 MiB (1 instance)
NUMA node(s):                       1
NUMA node0 CPU(s):                  0-15
Vulnerability Gather data sampling: Not affected
Vulnerability Itlb multihit:        Not affected
Vulnerability L1tf:                 Not affected
Vulnerability Mds:                  Vulnerable; SMT Host state unknown
Vulnerability Meltdown:             Not affected
Vulnerability Mmio stale data:      Vulnerable
Vulnerability Retbleed:             Vulnerable
Vulnerability Spec rstack overflow: Not affected
Vulnerability Spec store bypass:    Vulnerable
Vulnerability Spectre v1:           Vulnerable: __user pointer sanitization and usercopy barriers only; no swapgs barriers
Vulnerability Spectre v2:           Vulnerable, IBPB: disabled, STIBP: disabled, PBRSB-eIBRS: Vulnerable
Vulnerability Srbds:                Not affected
Vulnerability Tsx async abort:      Vulnerable

Versions of relevant libraries:
[pip3] numpy==1.25.2
[pip3] torch==2.3.0
[pip3] torchaudio==2.3.0
[pip3] torchdata==0.7.1
[pip3] torchsummary==1.5.1
[pip3] torchtext==0.17.1
[pip3] torchvision==0.18.0
[pip3] triton==2.3.0
[conda] Could not collect
2024-04-26 01:32:30,246:[P:11913]:Rank[0/2] Namespace(cfg='experiments/imagenet/cvt/cvt-21-384x384.yaml', local_rank=0, port=9000, opts=[], num_gpus=2, distributed=True)
2024-04-26 01:32:30,246:[P:11913]:Rank[0/2] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: False
    USE_TRANSFORM: True
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: imagenet
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: /content/drive/My Drive/DATASET/imagenet
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: val
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 512
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: True
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 1000
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 4, 16]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-21-384x384
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 32
  CENTER_CROP: False
  IMAGE_SIZE: [384, 384]
  INTERPOLATION: 3
  MODEL_FILE: 
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 128
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 300
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [384, 384]
  LR: 0.00025
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 300
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.1
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2024-04-26 01:32:30,247:[P:11913]:Rank[0/2] => using 2 GPUs
2024-04-26 01:32:30,247:[P:11913]:Rank[0/2] => saving config into: OUTPUT/imagenet/cvt-21-384x384/config.yaml
2024-04-26 01:32:30,262:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,263:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,264:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,264:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,264:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,264:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,288:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,288:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,288:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,289:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,289:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,289:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,289:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,290:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,290:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,291:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,291:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,292:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,293:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,293:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,293:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,293:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,294:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,294:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,294:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,294:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,295:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,296:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,296:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,297:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,297:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,298:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,298:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,298:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,298:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,299:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,299:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,299:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,299:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,301:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,301:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,302:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,302:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,302:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,303:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,303:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,303:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,303:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,304:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,304:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,304:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,305:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,305:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,306:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,580:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,581:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,581:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,583:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,583:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,584:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,584:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,585:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,585:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,590:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,590:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,594:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,594:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,595:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,595:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,597:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,597:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,598:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,598:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,599:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,599:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,603:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,604:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,608:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,608:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,609:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,609:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,611:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,611:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,612:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,612:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,613:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,613:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,617:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,618:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,622:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,622:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,623:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,623:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,625:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,625:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,626:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,626:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,627:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,627:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,631:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,632:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,636:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,636:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,637:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,637:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,639:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,639:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,640:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,640:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,641:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,641:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,646:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,646:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,650:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,650:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,651:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,651:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,653:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,653:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,654:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,654:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,655:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,655:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,659:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,660:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,664:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,664:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,665:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,665:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,667:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,667:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,668:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,668:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,669:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,669:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,673:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,674:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,678:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,678:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,679:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,679:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,680:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,681:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,682:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,682:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,683:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,683:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,687:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,687:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,692:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,692:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,693:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,693:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,694:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,695:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,696:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,696:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,697:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,697:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,701:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,702:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,706:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,706:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,707:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,707:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,708:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,709:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,710:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,710:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,711:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,711:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,715:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,715:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,720:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,720:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,721:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,721:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,722:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,722:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,724:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,724:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,725:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,725:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,729:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,729:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,734:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,734:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,735:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,735:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,736:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,736:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,738:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,738:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,739:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,739:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,743:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,743:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,748:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,748:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,749:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,749:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,750:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,751:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,752:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,752:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,753:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,753:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,758:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,758:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,762:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,762:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,764:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,764:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,765:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,765:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,766:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,766:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,768:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,768:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,772:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,772:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,776:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,776:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,778:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,778:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,779:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,779:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,780:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,780:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,782:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,782:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,786:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,786:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,790:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,790:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,792:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,792:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,793:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,793:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,794:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,794:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,796:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,796:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,800:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,800:[P:11913]:Rank[0/2] => init weight of Linear from trunc norm
2024-04-26 01:32:30,804:[P:11913]:Rank[0/2] => init bias of Linear to zeros
2024-04-26 01:32:30,944:[P:11913]:Rank[0/2] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-3): 4 x Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (10): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (11): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (12): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (13): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (14): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (15): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=1000, bias=True)
)
2024-04-26 01:32:30,969:[P:11913]:Rank[0/2] Trainable Model Total Parameter: 	31.6M
2024-04-26 01:32:31,070:[P:11913]:Rank[0/2] => use timm transform for training
