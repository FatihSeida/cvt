2024-04-20 11:41:47,418:[P:19308]:Rank[0/1] => collecting env info (might take some time)
2024-04-20 11:41:52,741:[P:19308]:Rank[0/1] 
PyTorch version: 2.2.2+cu121
Is debug build: False
CUDA used to build PyTorch: 12.1
ROCM used to build PyTorch: N/A

OS: Microsoft Windows 11 Home Single Language
GCC version: Could not collect
Clang version: Could not collect
CMake version: Could not collect
Libc version: N/A

Python version: 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] (64-bit runtime)
Python platform: Windows-11-10.0.22631-SP0
Is CUDA available: True
CUDA runtime version: Could not collect
CUDA_MODULE_LOADING set to: LAZY
GPU models and configuration: GPU 0: NVIDIA GeForce RTX 4050 Laptop GPU
Nvidia driver version: 551.78
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
'wmic' is not recognized as an internal or external command,
operable program or batch file.

Versions of relevant libraries:
[pip3] numpy==1.26.4
[pip3] torch==2.2.2+cu121
[pip3] torchaudio==2.2.2+cu121
[pip3] torchvision==0.17.2+cu121
[conda] _anaconda_depends         2024.02             py311_mkl_1  
[conda] blas                      1.0                         mkl  
[conda] mkl                       2023.1.0         h6b88ed4_46358  
[conda] mkl-service               2.4.0           py311h2bbff1b_1  
[conda] mkl_fft                   1.3.8           py311h2bbff1b_0  
[conda] mkl_random                1.2.4           py311h59b6b97_0  
[conda] numpy                     1.26.4          py311hdab7c0b_0  
[conda] numpy-base                1.26.4          py311hd01c5d8_0  
[conda] numpydoc                  1.5.0           py311haa95532_0  
2024-04-20 11:41:52,745:[P:19308]:Rank[0/1] Namespace(cfg='experiments/imagenet/cvt/cvt-21-384x384.yaml', local_rank=0, port=9000, opts=[], num_gpus=1, distributed=False)
2024-04-20 11:41:52,745:[P:19308]:Rank[0/1] AMP:
  ENABLED: True
  MEMORY_FORMAT: nchw
AUG:
  COLOR_JITTER: [0.4, 0.4, 0.4, 0.1, 0.0]
  DROPBLOCK_BLOCK_SIZE: 7
  DROPBLOCK_KEEP_PROB: 1.0
  DROPBLOCK_LAYERS: [3, 4]
  GAUSSIAN_BLUR: 0.0
  GRAY_SCALE: 0.0
  INTERPOLATION: 2
  MIXCUT: 1.0
  MIXCUT_AND_MIXUP: False
  MIXCUT_MINMAX: []
  MIXUP: 0.8
  MIXUP_MODE: batch
  MIXUP_PROB: 1.0
  MIXUP_SWITCH_PROB: 0.5
  RATIO: (0.75, 1.3333333333333333)
  SCALE: (0.08, 1.0)
  TIMM_AUG:
    AUTO_AUGMENT: rand-m9-mstd0.5-inc1
    COLOR_JITTER: 0.4
    HFLIP: 0.5
    INTERPOLATION: bicubic
    RE_COUNT: 1
    RE_MODE: pixel
    RE_PROB: 0.25
    RE_SPLIT: False
    USE_LOADER: True
    USE_TRANSFORM: False
    VFLIP: 0.0
BASE: ['']
CUDNN:
  BENCHMARK: True
  DETERMINISTIC: False
  ENABLED: True
DATASET:
  DATASET: imagenet
  DATA_FORMAT: jpg
  LABELMAP: 
  ROOT: D:\YoloV8\DATASET\imagenet
  SAMPLER: default
  TARGET_SIZE: -1
  TEST_SET: val
  TEST_TSV_LIST: []
  TRAIN_SET: train
  TRAIN_TSV_LIST: []
DATA_DIR: 
DEBUG:
  DEBUG: False
DIST_BACKEND: nccl
FINETUNE:
  BASE_LR: 0.003
  BATCH_SIZE: 512
  EVAL_EVERY: 3000
  FINETUNE: False
  FROZEN_LAYERS: []
  LR_SCHEDULER:
    DECAY_TYPE: step
  TRAIN_MODE: True
  USE_TRAIN_AUG: False
GPUS: (0,)
INPUT:
  MEAN: [0.485, 0.456, 0.406]
  STD: [0.229, 0.224, 0.225]
LOSS:
  LABEL_SMOOTHING: 0.1
  LOSS: softmax
MODEL:
  INIT_WEIGHTS: True
  NAME: cls_cvt
  NUM_CLASSES: 1000
  PRETRAINED: 
  PRETRAINED_LAYERS: ['*']
  SPEC:
    ATTN_DROP_RATE: [0.0, 0.0, 0.0]
    CLS_TOKEN: [False, False, True]
    DEPTH: [1, 4, 16]
    DIM_EMBED: [64, 192, 384]
    DROP_PATH_RATE: [0.0, 0.0, 0.1]
    DROP_RATE: [0.0, 0.0, 0.0]
    INIT: trunc_norm
    KERNEL_QKV: [3, 3, 3]
    MLP_RATIO: [4.0, 4.0, 4.0]
    NUM_HEADS: [1, 3, 6]
    NUM_STAGES: 3
    PADDING_KV: [1, 1, 1]
    PADDING_Q: [1, 1, 1]
    PATCH_PADDING: [2, 1, 1]
    PATCH_SIZE: [7, 3, 3]
    PATCH_STRIDE: [4, 2, 2]
    POS_EMBED: [False, False, False]
    QKV_BIAS: [True, True, True]
    QKV_PROJ_METHOD: ['dw_bn', 'dw_bn', 'dw_bn']
    STRIDE_KV: [2, 2, 2]
    STRIDE_Q: [1, 1, 1]
MODEL_SUMMARY: False
MULTIPROCESSING_DISTRIBUTED: True
NAME: cvt-21-384x384
OUTPUT_DIR: OUTPUT/
PIN_MEMORY: True
PRINT_FREQ: 500
RANK: 0
TEST:
  BATCH_SIZE_PER_GPU: 32
  CENTER_CROP: False
  IMAGE_SIZE: [384, 384]
  INTERPOLATION: 3
  MODEL_FILE: 
  REAL_LABELS: False
  VALID_LABELS: 
TRAIN:
  AUTO_RESUME: True
  BATCH_SIZE_PER_GPU: 128
  BEGIN_EPOCH: 0
  CHECKPOINT: 
  CLIP_GRAD_NORM: 0.0
  DETECT_ANOMALY: False
  END_EPOCH: 300
  EVAL_BEGIN_EPOCH: 0
  GAMMA1: 0.99
  GAMMA2: 0.0
  IMAGE_SIZE: [384, 384]
  LR: 0.000125
  LR_SCHEDULER:
    ARGS:
      cooldown_epochs: 10
      decay_rate: 0.1
      epochs: 300
      min_lr: 1e-05
      sched: cosine
      warmup_epochs: 5
      warmup_lr: 1e-06
    METHOD: timm
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZER: adamW
  OPTIMIZER_ARGS:
    
  SAVE_ALL_MODELS: False
  SCALE_LR: True
  SHUFFLE: True
  WD: 0.1
  WITHOUT_WD_LIST: ['bn', 'bias', 'ln']
VERBOSE: True
WORKERS: 6
2024-04-20 11:41:52,754:[P:19308]:Rank[0/1] => using 1 GPUs
2024-04-20 11:41:52,754:[P:19308]:Rank[0/1] => saving config into: OUTPUT\imagenet\cvt-21-384x384\config.yaml
2024-04-20 11:41:52,761:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,765:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,765:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,766:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,766:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,766:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,766:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,767:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,767:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,768:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,768:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,769:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,781:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,782:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,782:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,783:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,784:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,785:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,785:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,786:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,786:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,787:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,787:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,788:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,788:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,789:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,790:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,791:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,791:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,792:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,792:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,793:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,794:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,795:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,795:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,795:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,797:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,798:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,798:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,798:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,798:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,799:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,799:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,799:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,799:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,800:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,800:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,801:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,801:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,802:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,802:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,802:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,803:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,803:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,804:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,804:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,804:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,805:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:52,805:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:52,806:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,023:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,024:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,024:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,025:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,025:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,026:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,026:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,027:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,027:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,029:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,029:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,031:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,031:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,032:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,033:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,033:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,034:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,034:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,035:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,035:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,036:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,037:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,038:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,040:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,040:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,041:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,041:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,042:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,042:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,043:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,043:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,043:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,044:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,046:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,046:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,049:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,049:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,050:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,050:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,051:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,051:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,051:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,052:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,052:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,053:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,055:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,055:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,057:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,058:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,058:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,059:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,059:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,060:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,060:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,061:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,061:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,062:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,064:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,064:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,066:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,066:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,067:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,067:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,068:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,068:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,069:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,069:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,070:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,070:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,072:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,072:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,075:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,075:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,077:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,077:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,078:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,079:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,082:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,082:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,083:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,083:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,085:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,086:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,088:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,088:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,089:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,089:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,089:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,089:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,090:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,090:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,092:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,092:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,095:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,095:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,098:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,098:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,099:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,099:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,100:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,100:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,101:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,101:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,102:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,102:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,105:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,105:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,108:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,108:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,109:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,109:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,110:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,110:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,112:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,112:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,114:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,114:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,117:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,117:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,120:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,120:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,121:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,121:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,122:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,122:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,123:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,123:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,124:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,124:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,127:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,128:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,130:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,130:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,131:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,131:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,133:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,133:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,134:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,134:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,135:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,136:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,138:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,138:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,140:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,140:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,142:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,143:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,143:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,144:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,145:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,145:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,146:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,146:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,148:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,149:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,151:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,152:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,153:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,154:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,155:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,155:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,156:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,156:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,157:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,157:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,159:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,160:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,162:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,162:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,163:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,164:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,165:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,165:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,166:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,167:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,168:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,168:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,170:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,170:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,173:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,174:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,175:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,175:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,177:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,177:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,178:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,178:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,179:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,179:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,181:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,182:[P:19308]:Rank[0/1] => init weight of Linear from trunc norm
2024-04-20 11:41:53,184:[P:19308]:Rank[0/1] => init bias of Linear to zeros
2024-04-20 11:41:53,323:[P:19308]:Rank[0/1] => ConvolutionalVisionTransformer(
  (stage0): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(3, 64, kernel_size=(7, 7), stride=(4, 4), padding=(2, 2))
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=64, out_features=64, bias=True)
          (proj_k): Linear(in_features=64, out_features=64, bias=True)
          (proj_v): Linear(in_features=64, out_features=64, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=64, out_features=64, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=64, out_features=256, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=256, out_features=64, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage1): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(64, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0-3): 4 x Block(
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=192, out_features=192, bias=True)
          (proj_k): Linear(in_features=192, out_features=192, bias=True)
          (proj_v): Linear(in_features=192, out_features=192, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=192, out_features=192, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=768, out_features=192, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (stage2): VisionTransformer(
    (patch_embed): ConvEmbed(
      (proj): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
    )
    (pos_drop): Dropout(p=0.0, inplace=False)
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.007)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.013)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.020)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.027)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.033)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.040)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.047)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.053)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.060)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (10): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.067)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (11): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.073)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (12): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.080)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (13): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.087)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (14): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.093)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (15): Block(
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (conv_proj_q): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_k): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (conv_proj_v): Sequential(
            (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (rearrage): Rearrange('b c h w -> b (h w) c')
          )
          (proj_q): Linear(in_features=384, out_features=384, bias=True)
          (proj_k): Linear(in_features=384, out_features=384, bias=True)
          (proj_v): Linear(in_features=384, out_features=384, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): DropPath(drop_prob=0.100)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): QuickGELU()
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
  )
  (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
  (head): Linear(in_features=384, out_features=1000, bias=True)
)
2024-04-20 11:41:53,332:[P:19308]:Rank[0/1] Trainable Model Total Parameter: 	31.6M
2024-04-20 11:41:53,366:[P:19308]:Rank[0/1] => use timm loader for training
